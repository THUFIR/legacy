package legacy.gui.panels;

import java.math.BigDecimal;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import legacy.database.Clients;
import legacy.database.User;
import legacy.database.UserRole;

public class Sale extends JPanel {

    private static final Logger log = Logger.getLogger(Sale.class.getName());

    private Clients b = new Clients();
    private DefaultComboBoxModel m;
    private User user;

    private Sale() {
        initComponents();
    }

    public Sale(User user) {
        this.user = user;
        initComponents();
        fieldAccess();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        top = new javax.swing.JScrollPane();
        fields = new javax.swing.JPanel();
        companyL = new javax.swing.JLabel();
        opener = new javax.swing.JTextField();
        contactL = new javax.swing.JLabel();
        closer1 = new javax.swing.JTextField();
        addressL = new javax.swing.JLabel();
        closer2 = new javax.swing.JTextField();
        cityL = new javax.swing.JLabel();
        verifier = new javax.swing.JTextField();
        provinceL = new javax.swing.JLabel();
        reg = new javax.swing.JTextField();
        postalL = new javax.swing.JLabel();
        tax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        refunded = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        paymentMethod = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        conf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rec = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox();
        bottom = new javax.swing.JScrollPane();
        features = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        fields.setLayout(new java.awt.GridLayout(11, 2));

        companyL.setText("opener");
        fields.add(companyL);
        fields.add(opener);

        contactL.setText("closer 1");
        fields.add(contactL);
        fields.add(closer1);

        addressL.setText("closer 2");
        fields.add(addressL);
        fields.add(closer2);

        cityL.setText("verifier");
        fields.add(cityL);
        fields.add(verifier);

        provinceL.setText("reg fee");
        fields.add(provinceL);

        reg.setText("0.00");
        fields.add(reg);

        postalL.setText("tax rate");
        fields.add(postalL);

        tax.setText("0");
        fields.add(tax);

        jLabel7.setText("refunded");
        fields.add(jLabel7);

        refunded.setText("0");
        fields.add(refunded);

        jLabel8.setText("payment method");
        fields.add(jLabel8);
        fields.add(paymentMethod);

        jLabel9.setText("conf #");
        fields.add(jLabel9);
        fields.add(conf);

        jLabel10.setText("rec #");
        fields.add(jLabel10);
        fields.add(rec);

        jLabel11.setText("status");
        fields.add(jLabel11);

        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fields.add(status);

        top.setViewportView(fields);

        jSplitPane1.setTopComponent(top);

        features.setMinimumSize(new java.awt.Dimension(100, 24));
        features.setPreferredSize(new java.awt.Dimension(200, 24));
        bottom.setViewportView(features);

        jSplitPane1.setBottomComponent(bottom);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressL;
    private javax.swing.JScrollPane bottom;
    private javax.swing.JLabel cityL;
    private javax.swing.JTextField closer1;
    private javax.swing.JTextField closer2;
    private javax.swing.JLabel companyL;
    private javax.swing.JTextField conf;
    private javax.swing.JLabel contactL;
    private javax.swing.JTextPane features;
    private javax.swing.JPanel fields;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField opener;
    private javax.swing.JTextField paymentMethod;
    private javax.swing.JLabel postalL;
    private javax.swing.JLabel provinceL;
    private javax.swing.JTextField rec;
    private javax.swing.JTextField refunded;
    private javax.swing.JTextField reg;
    private javax.swing.JComboBox status;
    private javax.swing.JTextField tax;
    private javax.swing.JScrollPane top;
    private javax.swing.JTextField verifier;
    // End of variables declaration//GEN-END:variables

    private void chel() {
        if (user.getUser().equalsIgnoreCase("chelsey")) {
            closer1.setText("chelley");
            closer1.setVisible(true);
        }
    }

    private void fieldAccess() {
        boolean openerRole = user.getRoles().contains(UserRole.OPENER);
        boolean managerRole = user.getRoles().contains(UserRole.MANAGER);
        boolean closerRole = user.getRoles().contains(UserRole.CLOSER);
        m = new DefaultComboBoxModel();
        m.removeAllElements();
        if (managerRole) {
            m.addElement("active");
            m.addElement("cancelled");
            m.addElement("sold");
        }
        if (managerRole || closerRole) {
            m.addElement("not_interested");
            m.addElement("verify");
            m.addElement("opened1");
            m.addElement("opened2");
        }
        if (openerRole) {
            m.addElement("opened1");
            opener.setText(user.getUser());
        }
        opener.setEditable(managerRole);
        closer1.setVisible(closerRole || managerRole);
        closer1.setEditable(managerRole);
        closer2.setVisible(closerRole || managerRole);
        closer1.setEditable(managerRole);
        conf.setVisible(managerRole || closerRole);
        conf.setEditable(managerRole);
        paymentMethod.setVisible(managerRole || closerRole);
        paymentMethod.setEditable(managerRole || closerRole);
        rec.setVisible(managerRole || closerRole);
        rec.setEditable(managerRole);
        refunded.setVisible(managerRole || closerRole);
        refunded.setEditable(managerRole);
        reg.setVisible(managerRole || closerRole);
        reg.setEditable(managerRole);
        tax.setVisible(managerRole || closerRole);
        tax.setEditable(managerRole);
        verifier.setVisible(managerRole || closerRole);
        verifier.setEditable(managerRole);
        features.setVisible(managerRole || closerRole);
        features.setEditable(managerRole || closerRole);
        status.setModel(m);
        status.setSelectedIndex(0);
        chel();
    }

    public void setB(Clients b) throws NullPointerException {
        this.b = b;
        nullPop();
        pop();
        chel();
    }

    private void pop() {
        try {
            closer1.setText(b.getCloser1());
        } catch (Exception e) {
            log.severe("closer1");
        }
        try {
            closer2.setText(b.getCloser2());
        } catch (Exception e) {
            log.severe("closer2");
        }
        try {
            conf.setText(b.getConfirmation());
        } catch (Exception e) {
            log.severe("conf");
        }
        try {
            opener.setText(b.getOpener());
        } catch (Exception e) {
            log.severe("opener");
        }
        try {
            paymentMethod.setText(b.getPaymentMethod());
        } catch (Exception e) {
            log.severe("payment Method");
        }
        try {
            rec.setText(b.getRecording());
        } catch (Exception e) {
            log.severe("rec");
        }
        try {
            refunded.setText(b.getRefunded().toString());
        } catch (Exception e) {
            log.severe("refunded");
        }
        try {
            reg.setText(b.getRegFee().toString());
        } catch (Exception e) {
            log.severe(b.getId() + " reg\t" + e.toString());
        }
        try {
            tax.setText(b.getTaxRate().toString());
        } catch (Exception e) {
            log.severe("tax");
        }
        try {
            verifier.setText(b.getVerifier());
        } catch (Exception e) {
            log.severe("verifier");
        }
        String st = null;
        try {
            st = b.getStatus();
        } catch (Exception e) {
            log.severe("st");
        }
        try {
            status.setSelectedItem(st);
        } catch (Exception e) {
            log.severe("status");
        }
        try {
            features.setText(b.getFeatures());
        } catch (Exception e) {
            log.severe("features");
        }
        chel();
    }

    public void nullPop() {
        closer1.setText("");
        closer2.setText("");
        conf.setText("");
        opener.setText("");
        paymentMethod.setText("");
        rec.setText("");
        refunded.setText("0.00");
        reg.setText("0.00");
        tax.setText("0");
        verifier.setText("");
        status.setSelectedIndex(0);
        features.setText("");
        if (user.getRoles().contains(UserRole.OPENER)) {
            opener.setText(user.getUser());
            opener.setEditable(false);
        }
        chel();
    }

    public Clients getB() {
        b.setCloser1(closer1.getText());
        b.setCloser2(closer2.getText());
        b.setConfirmation(conf.getText());
        b.setOpener(opener.getText());
        b.setPaymentMethod(paymentMethod.getText());
        b.setRecording(rec.getText());
        b.setRegFee(BigDecimal.valueOf(Double.valueOf(reg.getText())));
        b.setRefunded(BigDecimal.valueOf(Double.valueOf(refunded.getText())));
        b.setTaxRate(Integer.valueOf(tax.getText()));
        b.setVerifier(verifier.getText());
        b.setStatus(status.getSelectedItem().toString());
        b.setFeatures(features.getText());
        chel();
        return b;
    }
}